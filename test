<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Photo Illusions Event Registration</title>
    <script src="https://js.stripe.com/v3/"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 15px;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 25px 50px rgba(0,0,0,0.15);
            padding: 35px;
            animation: slideUp 0.5s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .header {
            text-align: center;
            margin-bottom: 35px;
        }

        h1 {
            color: #2d3748;
            margin-bottom: 8px;
            font-size: 26px;
            font-weight: 700;
        }

        .subtitle {
            color: #718096;
            font-size: 14px;
        }

        h2 {
            color: #667eea;
            font-size: 16px;
            font-weight: 600;
            margin: 35px 0 20px 0;
            padding-bottom: 12px;
            border-bottom: 2px solid #f0f0f0;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        h2::before {
            content: '';
            width: 4px;
            height: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 2px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #4a5568;
            font-weight: 600;
            font-size: 14px;
        }

        label .required {
            color: #f56565;
            margin-left: 2px;
        }

        input[type="text"],
        input[type="email"],
        input[type="tel"],
        input[type="date"],
        input[type="number"],
        select,
        textarea {
            width: 100%;
            padding: 14px 16px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 15px;
            transition: all 0.3s;
            font-family: inherit;
            background: white;
            appearance: none;
        }

        select {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath fill='%23667eea' d='M10.293 3.293L6 7.586 1.707 3.293A1 1 0 00.293 4.707l5 5a1 1 0 001.414 0l5-5a1 1 0 10-1.414-1.414z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 16px center;
            padding-right: 40px;
            cursor: pointer;
        }

        input:focus,
        select:focus,
        textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        textarea {
            resize: vertical;
            min-height: 100px;
        }

        .row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        .time-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        .payment-method-selector {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .payment-method-btn {
            flex: 1;
            padding: 14px;
            border: 2px solid #e2e8f0;
            background: white;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s;
            font-size: 14px;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .payment-method-btn:hover {
            border-color: #667eea;
        }

        .payment-method-btn.active {
            border-color: #667eea;
            background: #f0f7ff;
            color: #667eea;
        }

        #card-element,
        #cashapp-element {
            padding: 14px 16px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            background: white;
            transition: all 0.3s;
        }

        #card-element.StripeElement--focus,
        #cashapp-element.StripeElement--focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .payment-element {
            display: none;
        }

        .payment-element.active {
            display: block;
        }

        .payment-amount-wrapper {
            position: relative;
        }

        .payment-amount-wrapper::before {
            content: '$';
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 18px;
            color: #4a5568;
            font-weight: 600;
            z-index: 1;
        }

        #payment-amount {
            padding-left: 35px;
            font-size: 18px;
            font-weight: 600;
        }

        button[type="submit"] {
            width: 100%;
            padding: 16px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            margin-top: 25px;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        button[type="submit"]:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.5);
        }

        button[type="submit"]:active:not(:disabled) {
            transform: translateY(0);
        }

        button[type="submit"]:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        #error-message {
            color: #e53e3e;
            margin-top: 12px;
            font-size: 14px;
            padding: 14px 16px;
            background: #fff5f5;
            border-radius: 10px;
            border-left: 4px solid #e53e3e;
            display: none;
        }

        #error-message.show {
            display: block;
            animation: slideDown 0.3s ease-out;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .spinner {
            display: inline-block;
            width: 18px;
            height: 18px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 0.8s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        @media (max-width: 600px) {
            body {
                padding: 10px;
            }

            .container {
                padding: 25px 20px;
                border-radius: 15px;
            }
            
            .row,
            .time-row {
                grid-template-columns: 1fr;
            }

            h1 {
                font-size: 22px;
            }

            h2 {
                font-size: 15px;
            }

            .payment-method-selector {
                flex-direction: column;
            }
        }

        @media (hover: none) and (pointer: coarse) {
            input,
            select,
            textarea,
            button {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸ“¸ Photo Illusions</h1>
            <p class="subtitle">Event Registration & Payment</p>
        </div>
        
        <form id="registration-form">
            <h2>Event Details</h2>
            
            <div class="form-group">
                <label for="event-title">Event Title <span class="required">*</span></label>
                <input type="text" id="event-title" placeholder="Birthday Party, Wedding, etc." required>
            </div>

            <div class="form-group">
                <label for="event-date">Date of Event <span class="required">*</span></label>
                <input type="date" id="event-date" required>
            </div>

            <div class="time-row">
                <div class="form-group">
                    <label for="start-time">Start Time <span class="required">*</span></label>
                    <select id="start-time" required>
                        <option value="">Select time</option>
                        <option value="00:00">12:00 AM</option>
                        <option value="00:30">12:30 AM</option>
                        <option value="01:00">1:00 AM</option>
                        <option value="01:30">1:30 AM</option>
                        <option value="02:00">2:00 AM</option>
                        <option value="02:30">2:30 AM</option>
                        <option value="03:00">3:00 AM</option>
                        <option value="03:30">3:30 AM</option>
                        <option value="04:00">4:00 AM</option>
                        <option value="04:30">4:30 AM</option>
                        <option value="05:00">5:00 AM</option>
                        <option value="05:30">5:30 AM</option>
                        <option value="06:00">6:00 AM</option>
                        <option value="06:30">6:30 AM</option>
                        <option value="07:00">7:00 AM</option>
                        <option value="07:30">7:30 AM</option>
                        <option value="08:00">8:00 AM</option>
                        <option value="08:30">8:30 AM</option>
                        <option value="09:00">9:00 AM</option>
                        <option value="09:30">9:30 AM</option>
                        <option value="10:00">10:00 AM</option>
                        <option value="10:30">10:30 AM</option>
                        <option value="11:00">11:00 AM</option>
                        <option value="11:30">11:30 AM</option>
                        <option value="12:00">12:00 PM</option>
                        <option value="12:30">12:30 PM</option>
                        <option value="13:00">1:00 PM</option>
                        <option value="13:30">1:30 PM</option>
                        <option value="14:00">2:00 PM</option>
                        <option value="14:30">2:30 PM</option>
                        <option value="15:00">3:00 PM</option>
                        <option value="15:30">3:30 PM</option>
                        <option value="16:00">4:00 PM</option>
                        <option value="16:30">4:30 PM</option>
                        <option value="17:00">5:00 PM</option>
                        <option value="17:30">5:30 PM</option>
                        <option value="18:00">6:00 PM</option>
                        <option value="18:30">6:30 PM</option>
                        <option value="19:00">7:00 PM</option>
                        <option value="19:30">7:30 PM</option>
                        <option value="20:00">8:00 PM</option>
                        <option value="20:30">8:30 PM</option>
                        <option value="21:00">9:00 PM</option>
                        <option value="21:30">9:30 PM</option>
                        <option value="22:00">10:00 PM</option>
                        <option value="22:30">10:30 PM</option>
                        <option value="23:00">11:00 PM</option>
                        <option value="23:30">11:30 PM</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="end-time">End Time <span class="required">*</span></label>
                    <select id="end-time" required>
                        <option value="">Select time</option>
                        <option value="00:00">12:00 AM</option>
                        <option value="00:30">12:30 AM</option>
                        <option value="01:00">1:00 AM</option>
                        <option value="01:30">1:30 AM</option>
                        <option value="02:00">2:00 AM</option>
                        <option value="02:30">2:30 AM</option>
                        <option value="03:00">3:00 AM</option>
                        <option value="03:30">3:30 AM</option>
                        <option value="04:00">4:00 AM</option>
                        <option value="04:30">4:30 AM</option>
                        <option value="05:00">5:00 AM</option>
                        <option value="05:30">5:30 AM</option>
                        <option value="06:00">6:00 AM</option>
                        <option value="06:30">6:30 AM</option>
                        <option value="07:00">7:00 AM</option>
                        <option value="07:30">7:30 AM</option>
                        <option value="08:00">8:00 AM</option>
                        <option value="08:30">8:30 AM</option>
                        <option value="09:00">9:00 AM</option>
                        <option value="09:30">9:30 AM</option>
                        <option value="10:00">10:00 AM</option>
                        <option value="10:30">10:30 AM</option>
                        <option value="11:00">11:00 AM</option>
                        <option value="11:30">11:30 AM</option>
                        <option value="12:00">12:00 PM</option>
                        <option value="12:30">12:30 PM</option>
                        <option value="13:00">1:00 PM</option>
                        <option value="13:30">1:30 PM</option>
                        <option value="14:00">2:00 PM</option>
                        <option value="14:30">2:30 PM</option>
                        <option value="15:00">3:00 PM</option>
                        <option value="15:30">3:30 PM</option>
                        <option value="16:00">4:00 PM</option>
                        <option value="16:30">4:30 PM</option>
                        <option value="17:00">5:00 PM</option>
                        <option value="17:30">5:30 PM</option>
                        <option value="18:00">6:00 PM</option>
                        <option value="18:30">6:30 PM</option>
                        <option value="19:00">7:00 PM</option>
                        <option value="19:30">7:30 PM</option>
                        <option value="20:00">8:00 PM</option>
                        <option value="20:30">8:30 PM</option>
                        <option value="21:00">9:00 PM</option>
                        <option value="21:30">9:30 PM</option>
                        <option value="22:00">10:00 PM</option>
                        <option value="22:30">10:30 PM</option>
                        <option value="23:00">11:00 PM</option>
                        <option value="23:30">11:30 PM</option>
                    </select>
                </div>
            </div>

            <h2>Contact Information</h2>

            <div class="form-group">
                <label for="full-name">Full Name <span class="required">*</span></label>
                <input type="text" id="full-name" placeholder="John Smith" required>
            </div>

            <div class="row">
                <div class="form-group">
                    <label for="phone">Phone Number <span class="required">*</span></label>
                    <input type="tel" id="phone" placeholder="(555) 123-4567" required>
                </div>

                <div class="form-group">
                    <label for="email">Email Address <span class="required">*</span></label>
                    <input type="email" id="email" placeholder="you@example.com" required>
                </div>
            </div>

            <h2>Venue Information</h2>

            <div class="form-group">
                <label for="venue-name">Name of Venue</label>
                <input type="text" id="venue-name" placeholder="Community Center, Home Address, etc.">
            </div>

            <div class="form-group">
                <label for="venue-address">Venue Address</label>
                <input type="text" id="venue-address" placeholder="123 Main St, City, State 12345">
            </div>

            <div class="form-group">
                <label for="notes">Additional Notes</label>
                <textarea id="notes" placeholder="Any special requests, parking instructions, or details we should know..."></textarea>
            </div>

            <h2>Payment</h2>

            <div class="form-group">
                <label for="payment-amount">Deposit/Payment Amount <span class="required">*</span></label>
                <div class="payment-amount-wrapper">
                    <input type="number" id="payment-amount" min="1" step="0.01" required placeholder="0.00">
                </div>
            </div>

            <div class="form-group">
                <label>Payment Method <span class="required">*</span></label>
                <div class="payment-method-selector">
                    <button type="button" class="payment-method-btn active" data-method="card">
                        ðŸ’³ Card
                    </button>
                    <button type="button" class="payment-method-btn" data-method="cashapp">
                        ðŸ’µ Cash App
                    </button>
                </div>
                
                <div id="card-container" class="payment-element active">
                    <div id="card-element"></div>
                </div>
                
                <div id="cashapp-container" class="payment-element">
                    <div id="cashapp-element"></div>
                </div>
            </div>

            <button type="submit" id="submit-button">
                <span id="button-text">Complete Registration & Pay</span>
                <span id="spinner" class="spinner" style="display:none;"></span>
            </button>

            <div id="error-message"></div>
        </form>
    </div>

    <script>
        // Initialize Stripe - REPLACE WITH YOUR LIVE KEY
        const stripe = Stripe('pk_test_hzOQi3EwdLc00cBWEgu9vh3l'); // Change to pk_live_...
        const elements = stripe.elements();
        
        // Create card element
        const cardElement = elements.create('card', {
            style: {
                base: {
                    fontSize: '16px',
                    color: '#2d3748',
                    fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif',
                    '::placeholder': {
                        color: '#a0aec0'
                    }
                },
                invalid: {
                    color: '#e53e3e',
                    iconColor: '#e53e3e'
                }
            }
        });
        
        cardElement.mount('#card-element');

        // Create Cash App element
        const cashAppElement = elements.create('cashapp', {
            style: {
                base: {
                    fontSize: '16px'
                }
            }
        });
        
        cashAppElement.mount('#cashapp-element');

        // Payment method switching
        let currentPaymentMethod = 'card';
        
        document.querySelectorAll('.payment-method-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.preventDefault();
                
                // Update active states
                document.querySelectorAll('.payment-method-btn').forEach(b => b.classList.remove('active'));
                btn.classList.add('active');
                
                // Update payment method
                currentPaymentMethod = btn.dataset.method;
                
                // Show/hide payment elements
                document.querySelectorAll('.payment-element').forEach(el => el.classList.remove('active'));
                document.getElementById(`${currentPaymentMethod}-container`).classList.add('active');
            });
        });

        // Handle form submission
        const form = document.getElementById('registration-form');
        const submitButton = document.getElementById('submit-button');
        const buttonText = document.getElementById('button-text');
        const spinner = document.getElementById('spinner');
        const errorMessage = document.getElementById('error-message');

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            // Clear previous messages
            errorMessage.classList.remove('show');
            
            // Get payment amount
            const amount = parseFloat(document.getElementById('payment-amount').value);
            
            if (!amount || amount < 1) {
                showError('Please enter a valid payment amount of at least $1.00');
                return;
            }

            // Disable submit button and show loading
            submitButton.disabled = true;
            buttonText.style.display = 'none';
            spinner.style.display = 'inline-block';

            // Collect form data
            const formData = {
                eventTitle: document.getElementById('event-title').value,
                eventDate: document.getElementById('event-date').value,
                startTime: document.getElementById('start-time').value,
                endTime: document.getElementById('end-time').value,
                fullName: document.getElementById('full-name').value,
                phone: document.getElementById('phone').value,
                email: document.getElementById('email').value,
                venueName: document.getElementById('venue-name').value,
                venueAddress: document.getElementById('venue-address').value,
                notes: document.getElementById('notes').value,
                amount: amount
            };

            try {
                let paymentMethod;
                
                if (currentPaymentMethod === 'card') {
                    // Create payment method for card
                    const result = await stripe.createPaymentMethod({
                        type: 'card',
                        card: cardElement,
                        billing_details: {
                            name: formData.fullName,
                            email: formData.email,
                            phone: formData.phone
                        }
                    });

                    if (result.error) {
                        showError(result.error.message);
                        resetButton();
                        return;
                    }
                    
                    paymentMethod = result.paymentMethod;
                } else {
                    // Create payment method for Cash App
                    const result = await stripe.createPaymentMethod({
                        type: 'cashapp',
                        cashapp: cashAppElement,
                        billing_details: {
                            name: formData.fullName,
                            email: formData.email
                        }
                    });

                    if (result.error) {
                        showError(result.error.message);
                        resetButton();
                        return;
                    }
                    
                    paymentMethod = result.paymentMethod;
                }

                // Send to server
                const response = await fetch('/create-payment-intent', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        payment_method_id: paymentMethod.id,
                        amount: Math.round(amount * 100),
                        formData: formData
                    })
                });

                const result = await response.json();

                if (result.error) {
                    showError(result.error);
                    resetButton();
                } else {
                    // Redirect to thank you page
                    window.location.href = '/thank-you.html';
                }

            } catch (err) {
                showError('An error occurred. Please try again or contact support.');
                console.error(err);
                resetButton();
            }
        });

        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.classList.add('show');
            errorMessage.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }

        function resetButton() {
            submitButton.disabled = false;
            buttonText.style.display = 'inline';
            spinner.style.display = 'none';
        }
    </script>
</body>
</html>
